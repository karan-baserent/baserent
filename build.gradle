plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.4"
    id("io.micronaut.aot") version "4.0.4"
    id 'nu.studer.jooq' version '8.2'
}

version = "0.1"
group = "com.baserent"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.security:micronaut-security-jwt")
    compileOnly("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut.aws:micronaut-aws-secretsmanager")
    implementation("io.micronaut.aws:micronaut-aws-sdk-v2:3.9.2")
    implementation("io.micronaut:micronaut-http-client-jdk")
    annotationProcessor("io.micronaut:micronaut-inject-java")
    runtimeOnly("io.micronaut:micronaut-core")
    runtimeOnly("org.yaml:snakeyaml")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.sql:micronaut-jooq")
    implementation("org.postgresql:postgresql:42.6.0")
    runtimeOnly("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.liquibase:micronaut-liquibase")
    implementation("at.favre.lib:bcrypt:0.10.2")
    jooqGenerator("org.jooq:jooq-meta-extensions-liquibase:3.18.7")
    jooqGenerator("org.liquibase:liquibase-core:4.24.0")
    compileOnly("org.immutables:value:2.9.2")
    annotationProcessor("org.immutables:value:2.9.2")
}


application {
    mainClass.set("com.baserent.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.baserent.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}

tasks.named('dockerfileNative') {
    baseImage('ubuntu:latest')
}

tasks.named('dockerfile') {
    baseImage('arm64v8/eclipse-temurin')
}

/*run {
    jvmArgs "-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"
}*/

jooq{
    configurations {
        jooqRuntime {
        }
        main {
            generationTool{
                logging = org.jooq.meta.jaxb.Logging.TRACE
                generator{
                    database{
                        name = 'org.jooq.meta.extensions.liquibase.LiquibaseDatabase'
                        properties {
                            property {
                                key = 'rootPath'
                                value = 'src/main/resources'
                            }
                            property {
                                key = 'scripts'
                                value = 'db/changelog-root.xml'
                            }
                            property {
                                key = 'includeLiquibaseTables'
                                value = false
                            }
                        }
                    }
                    strategy {
                        name = "org.jooq.codegen.KeepNamesGeneratorStrategy"
                    }
                    target {
                        packageName = 'com.baserent.jooq'
                    }
                }
            }
        }
    }
}



